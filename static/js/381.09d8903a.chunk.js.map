{"version":3,"file":"static/js/381.09d8903a.chunk.js","mappings":"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","sources":["components/LoadmoreBtn/LoadmoreBtn.styled.jsx","components/LoadmoreBtn/LoadmoreBtn.jsx","pages/CatalogPage/CatalogPage.jsx"],"sourcesContent":["import styled from '@emotion/styled';\n\nexport const StyledLoadmoreBtn = styled.button`\n  display: block;\n  width: 100px;\n  height: 24px;\n  margin-left: auto;\n  margin-right: auto;\n  margin-bottom: 150px;\n  border: none;\n  border-radius: 12px;\n  text-align: center;\n  text-decoration: underline;\n  color: var(--accent-color);\n  background-color: transparent;\n  font-family: 'Manrope';\n  font-weight: 500;\n  font-size: 16px;\n  line-height: 1.5;\n  transition: color var(--tra);\n\n  :hover {\n    color: var(--button-active-color);\n  }\n\n  :focus-visible {\n    text-shadow: 1px 1px 2px var(--accent-color);\n    outline: none;\n  }\n`;\n","import { StyledLoadmoreBtn } from \"./LoadmoreBtn.styled\";\n\nexport const LoadmoreBtn = ({ onClick }) => (\n  <StyledLoadmoreBtn onClick={onClick} type=\"button\">Load more</StyledLoadmoreBtn>\n);\n","import { useState, useEffect, useRef } from 'react';\nimport { debounce } from 'lodash';\nimport { fetchCars } from 'services/api';\nimport { getUniqueBrands } from 'js/getUniqueBrands';\nimport { getFilteredCars } from 'js/getFilteredCars';\nimport { load, save, remove } from 'js/localStorageFunctions';\nimport { CarList } from 'components/CarList';\nimport { LoadmoreBtn } from 'components/LoadmoreBtn';\nimport { Spinner } from 'components/Loader';\nimport { DropdownMenu } from 'components/DropdownMenu';\nimport {\n  FAVORITES_KEY,\n  CATALOG_BRAND,\n  CATALOG_PRICE,\n  CATALOG_MIN_MILEAGE,\n  CATALOG_MAX_MILEAGE,\n} from 'constants';\n\nconst useLocalStorage = (key, defaultValue) => {\n  const [state, setState] = useState(() => load(key) ?? defaultValue);\n  return [state, setState];\n};\n\nexport default function CatalogPage() {\n  const [cars, setCars] = useState([]);\n  const [page, setPage] = useState(1);\n  const [error, setError] = useState(null);\n  const [status, setStatus] = useState('pending');\n  const [selectedBrand, setSelectedBrand] = useLocalStorage(\n    CATALOG_BRAND,\n    'Enter the text'\n  );\n  const [selectedPrice, setSelectedPrice] = useState('To $');\n  const [minMileage, setMinMileage] = useState('');\n  const [maxMileage, setMaxMileage] = useState('');\n  const [filterMinMileage, setFilterMinMileage] = useState('');\n  const [filterMaxMileage, setFilterMaxMileage] = useState('');\n  const [filteredCars, setFilteredCars] = useState([]);\n\n  const debounsedMinMileage = useRef(\n    debounce(value => setFilterMinMileage(value), 300)\n  ).current;\n\n  const debounsedMaxMileage = useRef(\n    debounce(value => setFilterMaxMileage(value), 300)\n  ).current;\n\n  useEffect(() => {\n    fetchCars(page)\n      .then(res => {\n        page === 1 ? setCars(res) : setCars(prev => [...prev, ...res]);\n        setError(null);\n        setStatus('resolved');\n      })\n      .catch(error => {\n        setError(error);\n        setStatus('rejected');\n      });\n  }, [page]);\n\n  useEffect(() => {\n    //  const savedBrand = load(CATALOG_BRAND);\n    //  if (savedBrand) {\n    //    setSelectedBrand(savedBrand);\n    //  }\n\n    const savedPrice = load(CATALOG_PRICE);\n    if (savedPrice) {\n      setSelectedPrice(savedPrice);\n    }\n\n    const savedMinMileage = load(CATALOG_MIN_MILEAGE);\n    if (savedMinMileage) {\n      setMinMileage(savedMinMileage);\n      setFilterMinMileage(savedMinMileage);\n    }\n\n    const savedMaxMileage = load(CATALOG_MAX_MILEAGE);\n    if (savedMaxMileage) {\n      setMaxMileage(savedMaxMileage);\n      setFilterMaxMileage(savedMaxMileage);\n    }\n  }, []);\n\n  useEffect(() => {\n    if (cars.length === 0) setFilteredCars([]);\n\n    const filter = {\n      brand: selectedBrand,\n      price: selectedPrice,\n      minMileage: filterMinMileage,\n      maxMileage: filterMaxMileage,\n    };\n\n    setFilteredCars(getFilteredCars(cars, filter));\n  }, [cars, selectedBrand, selectedPrice, filterMinMileage, filterMaxMileage]);\n\n  useEffect(() => {\n    return () => {\n      debounsedMinMileage.cancel();\n      debounsedMaxMileage.cancel();\n    };\n  }, [debounsedMinMileage, debounsedMaxMileage]);\n\n  const toggleFavorite = id => {\n    const storedFavoritesIds = load(FAVORITES_KEY) ?? [];\n\n    const isFavorite = storedFavoritesIds.includes(id);\n\n    if (isFavorite) {\n      const index = storedFavoritesIds.findIndex(carId => carId === id);\n\n      if (index !== -1) storedFavoritesIds.splice(index, 1);\n\n      save(FAVORITES_KEY, storedFavoritesIds);\n    } else {\n      storedFavoritesIds.push(id);\n\n      save(FAVORITES_KEY, storedFavoritesIds);\n    }\n  };\n\n  const handleChange = (id, value) => {\n    switch (id) {\n      case 'brand':\n        setSelectedBrand(value);\n        save(CATALOG_BRAND, value);\n        break;\n\n      case 'price':\n        setSelectedPrice(Number(value));\n        save(CATALOG_PRICE, Number(value));\n        break;\n\n      case 'min':\n        setMinMileage(value);\n        debounsedMinMileage(value);\n        save(CATALOG_MIN_MILEAGE, value);\n        break;\n\n      case 'max':\n        setMaxMileage(value);\n        debounsedMaxMileage(value);\n        save(CATALOG_MAX_MILEAGE, value);\n        break;\n\n      default:\n        return;\n    }\n  };\n\n  const handleReset = () => {\n    setSelectedBrand('Enter the text');\n    setSelectedPrice('To $');\n    setMinMileage('');\n    setMaxMileage('');\n    setFilterMinMileage('');\n    setFilterMaxMileage('');\n\n    remove(CATALOG_BRAND);\n    remove(CATALOG_PRICE);\n    remove(CATALOG_MIN_MILEAGE);\n    remove(CATALOG_MAX_MILEAGE);\n  };\n\n  return (\n    <>\n      <DropdownMenu\n        brands={getUniqueBrands(cars)}\n        onFilterChange={handleChange}\n        onFilterReset={handleReset}\n        selectedBrand={selectedBrand}\n        selectedPrice={selectedPrice}\n        minMileage={minMileage}\n        maxMileage={maxMileage}\n      />\n      {status === 'pending' && <Spinner />}\n      {status === 'rejected' && <h3>{error?.message}</h3>}\n      {status === 'resolved' && (\n        <CarList cars={filteredCars} toggleFavorite={toggleFavorite} />\n      )}\n      {page < 4 && (\n        <LoadmoreBtn\n          onClick={() => {\n            setPage(prev => prev + 1);\n          }}\n        />\n      )}\n    </>\n  );\n}\n"],"names":["StyledLoadmoreBtn","styled","LoadmoreBtn","onClick","type","CatalogPage","useState","cars","setCars","page","setPage","error","setError","status","setStatus","key","defaultValue","load","useLocalStorage","CATALOG_BRAND","selectedBrand","setSelectedBrand","selectedPrice","setSelectedPrice","minMileage","setMinMileage","maxMileage","setMaxMileage","filterMinMileage","setFilterMinMileage","filterMaxMileage","setFilterMaxMileage","filteredCars","setFilteredCars","debounsedMinMileage","useRef","debounce","value","current","debounsedMaxMileage","useEffect","fetchCars","then","res","prev","catch","savedPrice","CATALOG_PRICE","savedMinMileage","CATALOG_MIN_MILEAGE","savedMaxMileage","CATALOG_MAX_MILEAGE","length","filter","brand","price","getFilteredCars","cancel","DropdownMenu","brands","getUniqueBrands","onFilterChange","id","save","Number","onFilterReset","remove","message","CarList","toggleFavorite","storedFavoritesIds","FAVORITES_KEY","includes","index","findIndex","carId","splice","push"],"sourceRoot":""}